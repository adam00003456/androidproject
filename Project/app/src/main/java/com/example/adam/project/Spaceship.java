package com.example.adam.project;/** * Created by Adam on 12/20/2014. */import android.content.Context;import android.graphics.Bitmap;import android.graphics.Canvas;import android.graphics.Color;import android.graphics.Paint;import android.graphics.Rect;import java.util.ArrayList;public class Spaceship {    //can implement limited bullets here to make the game harder    //    //for now the ship will simply make a bullet every time shoot is called and will fire that    //bullet from the ship    private ArrayList<Bullet> bullets= new ArrayList<Bullet>();    private Bitmap bitmap; // the actual bitmap    private int x;  //the X coordinate    private int y;  //the Y coordinate    public boolean isvisible;    public Rect boundingbox;    private Paint alphaPaint = new Paint();    private int currentAlpha = 255;    private int hitstaken = 0;    private Explosion mExplosion;    private final static int NUM_PARTICLES = 25;    public boolean hit = false;    private Bitmap nextSpaceshiptodraw;    private ArrayList<Bitmap> BitMapArrayList = new ArrayList<Bitmap>();    private int picturenumber = 0;    public Spaceship(Bitmap bitmap, int x, int y) {        this.bitmap = bitmap;        this.nextSpaceshiptodraw = bitmap;        this.x = x;        this.y = y;        isvisible = true;        boundingbox = new Rect(x, y, (x + bitmap.getWidth()), (y + bitmap.getHeight()));    }    public void addToArrayList(Bitmap bitmap){        BitMapArrayList.add(bitmap);    }    public void collision(Rect rectofbullet, Bullet bullet) {        if (boundingbox.intersect(rectofbullet)) {            //isvisible = false;            hit = true;            hitstaken += 1;            bullet.setVisibility();        }    }    public int getHitstaken(){        return hitstaken;    }    public void shoot(int x, int y) {        Bullet b = new Bullet(this.x + ((bitmap.getWidth()/2)/2), this.y - (bitmap.getHeight()/2));        bullets.add(b);    }    public void afterIfCollisionIsTrue(){        if(currentAlpha>0 && this.hit){            currentAlpha=currentAlpha-30;            alphaPaint.setAlpha(currentAlpha);        }    }    public void ifCollisionIsTrue(Context context){        if (mExplosion==null || mExplosion.isDead() && this.hit == true) {            mExplosion = new Explosion(NUM_PARTICLES, x-(this.getBitmap().getWidth() / 2),                    y-(this.getBitmap().getHeight() / 2), context);        }    }    public void testcollision(Canvas canvas){        Paint paint = new Paint();        paint.setColor(Color.GREEN);        paint.setStyle(Paint.Style.STROKE);        canvas.drawRect(boundingbox, paint);    }    public void updateBoundingBox(){        boundingbox.set((this.getX() - (this.getBitmap().getWidth() / 2)),                (this.getY() - (this.getBitmap().getHeight() / 2)),                (this.getX() - (this.getBitmap().getWidth() / 2)) + this.getBitmap().getWidth(),                (this.getY() - (this.getBitmap().getHeight() / 2) + this.getBitmap().getHeight()));    }    public ArrayList<Bullet> bulletarraygetter() {        return this.bullets;    }    public Bitmap getBitmap() {        return bitmap;    }    public void setBitmap(Bitmap bitmap) {        this.bitmap = bitmap;    }    public int getX() {        return x;    }    public void setX(int x) {        this.x = x;    }    public int getY()  {        return y;    }    public void setY(int y) {        this.y = y;    }    public void draw(Canvas canvas) {        canvas.drawBitmap(this.getBitmap(), x - (bitmap.getWidth() / 2),                y - (bitmap.getHeight() / 2), alphaPaint);        if(currentAlpha <= 0 && this.hit==true) {            nextSpaceshiptodraw = BitMapArrayList.get(picturenumber);            picturenumber++;            this.bitmap = nextSpaceshiptodraw;            canvas.drawBitmap(this.getBitmap(), x - (bitmap.getWidth() / 2),                    y - (bitmap.getHeight() / 2), alphaPaint);            this.hit=false;        }    }    public void drawExplosion(Canvas canvas){        if(mExplosion != null)            mExplosion.update(canvas);        if (mExplosion != null && mExplosion.isDead()) {            currentAlpha = 255;        }    }}